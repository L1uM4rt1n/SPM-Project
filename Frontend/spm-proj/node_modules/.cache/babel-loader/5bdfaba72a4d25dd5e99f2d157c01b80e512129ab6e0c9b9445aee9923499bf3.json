{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = {\n  class: \"d-flex flex-row justify-content-between align-items-center p-3\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"mb-0\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn btn-secondary border-dark\"\n}, \"Create Job Listing\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"card border-secondary position-relative\"\n};\nconst _hoisted_7 = {\n  class: \"card-body\"\n};\nconst _hoisted_8 = {\n  class: \"card-title pb-3\"\n};\nconst _hoisted_9 = {\n  class: \"card-text\"\n};\nconst _hoisted_10 = {\n  class: \"card-text\"\n};\nconst _hoisted_11 = {\n  class: \"position-absolute bottom-0 end-0 m-2 edit-button\"\n};\nconst _hoisted_12 = [\"href\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_SearchBar = _resolveComponent(\"SearchBar\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Search Bar \"), _createVNode(_component_SearchBar, {\n    keywordSearch: $data.searchKeyword,\n    \"onUpdate:keywordSearch\": _cache[0] || (_cache[0] = $event => $data.searchKeyword = $event),\n    selectedSkills: $data.selectedSkills,\n    selectedDepartments: $data.selectedDepartments,\n    onSearchRequest: $options.performSearch\n  }, null, 8 /* PROPS */, [\"keywordSearch\", \"selectedSkills\", \"selectedDepartments\", \"onSearchRequest\"]), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Display Title and Create Listing Button \"), _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createVNode(_component_router_link, {\n    to: {\n      name: 'createJobListing'\n    }\n  }, {\n    default: _withCtx(() => [_hoisted_5]),\n    _: 1 /* STABLE */\n  })]), _createCommentVNode(\" Display Job Listings \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.filteredResults, job => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"mb-3\",\n      key: job.id\n    }, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"h4\", _hoisted_8, _toDisplayString(job.title), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_9, \"Availability: \" + _toDisplayString(job.availability), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_10, \"Application Deadline: \" + _toDisplayString(job.deadline), 1 /* TEXT */)]), _createCommentVNode(\" Edit Button (Bottom-right corner) \"), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"a\", {\n      href: '#edit/' + job.id,\n      class: \"btn btn-link\"\n    }, \"Edit\", 8 /* PROPS */, _hoisted_12)])])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_SearchBar","keywordSearch","$data","searchKeyword","$event","selectedSkills","selectedDepartments","onSearchRequest","$options","performSearch","_hoisted_2","_hoisted_3","_hoisted_4","_component_router_link","to","name","_hoisted_5","_Fragment","_renderList","filteredResults","job","key","id","_hoisted_6","_hoisted_7","_hoisted_8","_toDisplayString","title","_hoisted_9","availability","_hoisted_10","deadline","_hoisted_11","href","_hoisted_12"],"sources":["C:\\wamp64\\www\\SPM\\SPM-Project\\Frontend\\spm-proj\\src\\views\\HRHome.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <!-- Search Bar -->\r\n        <SearchBar\r\n            v-model:keywordSearch=\"searchKeyword\"\r\n            :selectedSkills=\"selectedSkills\"\r\n            :selectedDepartments=\"selectedDepartments\"\r\n            @search-request=\"performSearch\"\r\n        />\r\n    \r\n        <div class=\"container\">\r\n            <!-- Display Title and Create Listing Button -->\r\n            <div class=\"d-flex flex-row justify-content-between align-items-center p-3\">\r\n            <h1 class=\"mb-0\"></h1>\r\n            <router-link :to=\"{ name: 'createJobListing' }\">\r\n                <button class=\"btn btn-secondary border-dark\">Create Job Listing</button>\r\n            </router-link>\r\n            </div>\r\n    \r\n            <!-- Display Job Listings -->\r\n            <div class=\"mb-3\" v-for=\"job in filteredResults\" :key=\"job.id\">\r\n            <div class=\"card border-secondary position-relative\">\r\n                <div class=\"card-body\">\r\n                <h4 class=\"card-title pb-3\">{{ job.title }}</h4>\r\n                <p class=\"card-text\">Availability: {{ job.availability }}</p>\r\n                <p class=\"card-text\">Application Deadline: {{ job.deadline }}</p>\r\n                </div>\r\n                <!-- Edit Button (Bottom-right corner) -->\r\n                <div class=\"position-absolute bottom-0 end-0 m-2 edit-button\">\r\n                <a :href=\"'#edit/' + job.id\" class=\"btn btn-link\">Edit</a>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </template>\r\n    \r\n<script>\r\nimport SearchBar from '../components/SearchBar.vue';\r\nimport 'bootstrap/dist/css/bootstrap.css'; // Import Bootstrap 4 CSS\r\nimport 'jquery/dist/jquery.min.js'; // Import jQuery\r\nimport 'bootstrap/dist/js/bootstrap.min.js'; // Import Bootstrap 4 JS\r\n\r\n    export default {\r\n    name: 'HRHome',\r\n    components: {\r\n        SearchBar,\r\n    },\r\n    data() {\r\n        return {\r\n        selectedSkills: [],\r\n        selectedDepartments: [],\r\n        searchKeyword: '', // Add a data property for search keyword\r\n        jobListings: [], // Initialize an empty array for job listings\r\n        filteredResults:[],\r\n        };\r\n    },\r\n    methods: {\r\n    performSearch(payload) {\r\n        if (payload) {\r\n        const { keyword, selectedDepartments, selectedSkills } = payload;\r\n\r\n        // Your filtering logic here based on selected departments, skills, and keyword\r\n        const filteredResults = this.jobListings.filter((job) => {\r\n            const hasSelectedDepartment =\r\n            selectedDepartments.length === 0 ||\r\n            selectedDepartments.includes(job.department);\r\n            const hasSelectedSkills =\r\n            selectedSkills.length === 0 ||\r\n            selectedSkills.some((selectedSkill) =>\r\n                job.skills.includes(selectedSkill)\r\n            );\r\n            const keywordMatch = job.title\r\n            .toLowerCase()\r\n            .includes(keyword.toLowerCase());\r\n\r\n            return hasSelectedDepartment && hasSelectedSkills && keywordMatch;\r\n        });\r\n        this.filteredResults = filteredResults;\r\n        }\r\n        },\r\n    },\r\n\r\n    watch: {\r\n        // Watch for changes to the searchKeyword and trigger performSearch\r\n        searchKeyword: function() {\r\n            this.performSearch(); // Call the performSearch method when searchKeyword changes\r\n        },\r\n    },\r\n    mounted() {\r\n      // Simulate fetching data from a database (replace with actual data fetching)\r\n        setTimeout(() => {\r\n            this.jobListings = [\r\n            {\r\n            id: 1,\r\n            title: 'Software Developer',\r\n            skills: ['Java', 'HTML'],\r\n            department: 'IT',\r\n            availability: 2,\r\n            deadline: '31/09/2002',\r\n            },\r\n            {\r\n            id: 2,\r\n            title: 'Frontend Developer',\r\n            skills: ['HTML', 'CSS', 'JavaScript'],\r\n            department: 'HR',\r\n            availability: 2,\r\n            deadline: '26/09/2002',\r\n            },\r\n          // Add more job listings here\r\n        ];\r\n        // Set filteredJobListings to match the initial data\r\n        this.filteredResults = this.jobListings;\r\n      }, 1000); // Simulate an API call delay\r\n    },\r\n    };\r\n</script>\r\n\r\n<style>\r\n/* Custom CSS for the Edit button */\r\n.edit-button {\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n    margin: 10px; /* Adjust margin as needed */\r\n}\r\n</style>\r\n    "],"mappings":";;EACSA,KAAK,EAAC;AAAW;;EASbA,KAAK,EAAC;AAAW;;EAEbA,KAAK,EAAC;AAAgE;gCAC3EC,mBAAA,CAAsB;EAAlBD,KAAK,EAAC;AAAM;gCAEZC,mBAAA,CAAyE;EAAjED,KAAK,EAAC;AAA+B,GAAC,oBAAkB;;EAM/DA,KAAK,EAAC;AAAyC;;EAC3CA,KAAK,EAAC;AAAW;;EAClBA,KAAK,EAAC;AAAiB;;EACxBA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAW;;EAGfA,KAAK,EAAC;AAAkD;;;;;uBA3BzEE,mBAAA,CAiCU,OAjCVC,UAiCU,GAhCNC,mBAAA,gBAAmB,EACnBC,YAAA,CAKEC,oBAAA;IAJUC,aAAa,EAAEC,KAAA,CAAAC,aAAa;kEAAbD,KAAA,CAAAC,aAAa,GAAAC,MAAA;IACnCC,cAAc,EAAEH,KAAA,CAAAG,cAAc;IAC9BC,mBAAmB,EAAEJ,KAAA,CAAAI,mBAAmB;IACxCC,eAAc,EAAEC,QAAA,CAAAC;0GAGrBd,mBAAA,CAuBM,OAvBNe,UAuBM,GAtBFZ,mBAAA,6CAAgD,EAChDH,mBAAA,CAKM,OALNgB,UAKM,GAJNC,UAAsB,EACtBb,YAAA,CAEcc,sBAAA;IAFAC,EAAE,EAAE;MAAAC,IAAA;IAAA;EAA4B;sBAC1C,MAAyE,CAAzEC,UAAyE,C;;QAI7ElB,mBAAA,0BAA6B,G,kBAC7BF,mBAAA,CAYMqB,SAAA,QAAAC,WAAA,CAZ0BhB,KAAA,CAAAiB,eAAe,EAAtBC,GAAG;yBAA5BxB,mBAAA,CAYM;MAZDF,KAAK,EAAC,MAAM;MAAiC2B,GAAG,EAAED,GAAG,CAACE;QAC3D3B,mBAAA,CAUM,OAVN4B,UAUM,GATF5B,mBAAA,CAIM,OAJN6B,UAIM,GAHN7B,mBAAA,CAAgD,MAAhD8B,UAAgD,EAAAC,gBAAA,CAAjBN,GAAG,CAACO,KAAK,kBACxChC,mBAAA,CAA6D,KAA7DiC,UAA6D,EAAxC,gBAAc,GAAAF,gBAAA,CAAGN,GAAG,CAACS,YAAY,kBACtDlC,mBAAA,CAAiE,KAAjEmC,WAAiE,EAA5C,wBAAsB,GAAAJ,gBAAA,CAAGN,GAAG,CAACW,QAAQ,iB,GAE1DjC,mBAAA,uCAA0C,EAC1CH,mBAAA,CAEM,OAFNqC,WAEM,GADNrC,mBAAA,CAA0D;MAAtDsC,IAAI,aAAab,GAAG,CAACE,EAAE;MAAE5B,KAAK,EAAC;OAAe,MAAI,iBAAAwC,WAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}