{"ast":null,"code":"import SearchBar from '../components/SearchBar.vue';\nimport 'bootstrap/dist/css/bootstrap.css'; // Import Bootstrap 4 CSS\nimport 'jquery/dist/jquery.min.js'; // Import jQuery\nimport 'bootstrap/dist/js/bootstrap.min.js'; // Import Bootstrap 4 JS\n\nexport default {\n  name: 'HRHome',\n  components: {\n    SearchBar\n  },\n  data() {\n    return {\n      selectedSkills: [],\n      selectedDepartments: [],\n      searchKeyword: '',\n      // Add a data property for search keyword\n      jobListings: [],\n      // Initialize an empty array for job listings\n      filteredResults: []\n    };\n  },\n  methods: {\n    performSearch(payload) {\n      if (payload) {\n        const {\n          keyword,\n          selectedDepartments,\n          selectedSkills\n        } = payload;\n\n        // Your filtering logic here based on selected departments, skills, and keyword\n        const filteredResults = this.jobListings.filter(job => {\n          const hasSelectedDepartment = selectedDepartments.length === 0 || selectedDepartments.includes(job.department);\n          const hasSelectedSkills = selectedSkills.length === 0 || selectedSkills.some(selectedSkill => job.skills.includes(selectedSkill));\n          const keywordMatch = job.title.toLowerCase().includes(keyword.toLowerCase());\n          return hasSelectedDepartment && hasSelectedSkills && keywordMatch;\n        });\n        this.filteredResults = filteredResults;\n      }\n    }\n  },\n  watch: {\n    // Watch for changes to the searchKeyword and trigger performSearch\n    searchKeyword: function () {\n      this.performSearch(); // Call the performSearch method when searchKeyword changes\n    }\n  },\n\n  mounted() {\n    // Simulate fetching data from a database (replace with actual data fetching)\n    setTimeout(() => {\n      this.jobListings = [{\n        id: 1,\n        title: 'Software Developer',\n        skills: ['Java', 'HTML'],\n        department: 'IT',\n        availability: 2,\n        deadline: '31/09/2002'\n      }, {\n        id: 2,\n        title: 'Frontend Developer',\n        skills: ['HTML', 'CSS', 'JavaScript'],\n        department: 'HR',\n        availability: 2,\n        deadline: '26/09/2002'\n      }\n      // Add more job listings here\n      ];\n      // Set filteredJobListings to match the initial data\n      this.filteredResults = this.jobListings;\n    }, 1000); // Simulate an API call delay\n  }\n};","map":{"version":3,"names":["SearchBar","name","components","data","selectedSkills","selectedDepartments","searchKeyword","jobListings","filteredResults","methods","performSearch","payload","keyword","filter","job","hasSelectedDepartment","length","includes","department","hasSelectedSkills","some","selectedSkill","skills","keywordMatch","title","toLowerCase","watch","mounted","setTimeout","id","availability","deadline"],"sources":["C:\\wamp64\\www\\SPM\\SPM-Project\\Frontend\\spm-proj\\src\\views\\HRHome.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <!-- Search Bar -->\r\n        <SearchBar\r\n            v-model:keywordSearch=\"searchKeyword\"\r\n            :selectedSkills=\"selectedSkills\"\r\n            :selectedDepartments=\"selectedDepartments\"\r\n            @search-request=\"performSearch\"\r\n        />\r\n    \r\n        <div class=\"container\">\r\n            <!-- Display Title and Create Listing Button -->\r\n            <div class=\"d-flex flex-row justify-content-between align-items-center p-3\">\r\n            <h1 class=\"mb-0\"></h1>\r\n            <router-link :to=\"{ name: 'createJobListing' }\">\r\n                <button class=\"btn btn-secondary border-dark\">Create Job Listing</button>\r\n            </router-link>\r\n            </div>\r\n    \r\n            <!-- Display Job Listings -->\r\n            <div class=\"mb-3\" v-for=\"job in filteredResults\" :key=\"job.id\">\r\n            <div class=\"card border-secondary position-relative\">\r\n                <div class=\"card-body\">\r\n                <h4 class=\"card-title pb-3\">{{ job.title }}</h4>\r\n                <p class=\"card-text\">Availability: {{ job.availability }}</p>\r\n                <p class=\"card-text\">Application Deadline: {{ job.deadline }}</p>\r\n                </div>\r\n                <!-- Edit Button (Bottom-right corner) -->\r\n                <div class=\"position-absolute bottom-0 end-0 m-2 edit-button\">\r\n                <a :href=\"'#edit/' + job.id\" class=\"btn btn-link\">Edit</a>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </template>\r\n    \r\n<script>\r\nimport SearchBar from '../components/SearchBar.vue';\r\nimport 'bootstrap/dist/css/bootstrap.css'; // Import Bootstrap 4 CSS\r\nimport 'jquery/dist/jquery.min.js'; // Import jQuery\r\nimport 'bootstrap/dist/js/bootstrap.min.js'; // Import Bootstrap 4 JS\r\n\r\n    export default {\r\n    name: 'HRHome',\r\n    components: {\r\n        SearchBar,\r\n    },\r\n    data() {\r\n        return {\r\n        selectedSkills: [],\r\n        selectedDepartments: [],\r\n        searchKeyword: '', // Add a data property for search keyword\r\n        jobListings: [], // Initialize an empty array for job listings\r\n        filteredResults:[],\r\n        };\r\n    },\r\n    methods: {\r\n    performSearch(payload) {\r\n        if (payload) {\r\n        const { keyword, selectedDepartments, selectedSkills } = payload;\r\n\r\n        // Your filtering logic here based on selected departments, skills, and keyword\r\n        const filteredResults = this.jobListings.filter((job) => {\r\n            const hasSelectedDepartment =\r\n            selectedDepartments.length === 0 ||\r\n            selectedDepartments.includes(job.department);\r\n            const hasSelectedSkills =\r\n            selectedSkills.length === 0 ||\r\n            selectedSkills.some((selectedSkill) =>\r\n                job.skills.includes(selectedSkill)\r\n            );\r\n            const keywordMatch = job.title\r\n            .toLowerCase()\r\n            .includes(keyword.toLowerCase());\r\n\r\n            return hasSelectedDepartment && hasSelectedSkills && keywordMatch;\r\n        });\r\n        this.filteredResults = filteredResults;\r\n        }\r\n        },\r\n    },\r\n\r\n    watch: {\r\n        // Watch for changes to the searchKeyword and trigger performSearch\r\n        searchKeyword: function() {\r\n            this.performSearch(); // Call the performSearch method when searchKeyword changes\r\n        },\r\n    },\r\n    mounted() {\r\n      // Simulate fetching data from a database (replace with actual data fetching)\r\n        setTimeout(() => {\r\n            this.jobListings = [\r\n            {\r\n            id: 1,\r\n            title: 'Software Developer',\r\n            skills: ['Java', 'HTML'],\r\n            department: 'IT',\r\n            availability: 2,\r\n            deadline: '31/09/2002',\r\n            },\r\n            {\r\n            id: 2,\r\n            title: 'Frontend Developer',\r\n            skills: ['HTML', 'CSS', 'JavaScript'],\r\n            department: 'HR',\r\n            availability: 2,\r\n            deadline: '26/09/2002',\r\n            },\r\n          // Add more job listings here\r\n        ];\r\n        // Set filteredJobListings to match the initial data\r\n        this.filteredResults = this.jobListings;\r\n      }, 1000); // Simulate an API call delay\r\n    },\r\n    };\r\n</script>\r\n\r\n<style>\r\n/* Custom CSS for the Edit button */\r\n.edit-button {\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n    margin: 10px; /* Adjust margin as needed */\r\n}\r\n</style>\r\n    "],"mappings":"AAsCA,OAAOA,SAAQ,MAAO,6BAA6B;AACnD,OAAO,kCAAkC,EAAE;AAC3C,OAAO,2BAA2B,EAAE;AACpC,OAAO,oCAAoC,EAAE;;AAEzC,eAAe;EACfC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRF;EACJ,CAAC;EACDG,IAAIA,CAAA,EAAG;IACH,OAAO;MACPC,cAAc,EAAE,EAAE;MAClBC,mBAAmB,EAAE,EAAE;MACvBC,aAAa,EAAE,EAAE;MAAE;MACnBC,WAAW,EAAE,EAAE;MAAE;MACjBC,eAAe,EAAC;IAChB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACTC,aAAaA,CAACC,OAAO,EAAE;MACnB,IAAIA,OAAO,EAAE;QACb,MAAM;UAAEC,OAAO;UAAEP,mBAAmB;UAAED;QAAe,IAAIO,OAAO;;QAEhE;QACA,MAAMH,eAAc,GAAI,IAAI,CAACD,WAAW,CAACM,MAAM,CAAEC,GAAG,IAAK;UACrD,MAAMC,qBAAoB,GAC1BV,mBAAmB,CAACW,MAAK,KAAM,KAC/BX,mBAAmB,CAACY,QAAQ,CAACH,GAAG,CAACI,UAAU,CAAC;UAC5C,MAAMC,iBAAgB,GACtBf,cAAc,CAACY,MAAK,KAAM,KAC1BZ,cAAc,CAACgB,IAAI,CAAEC,aAAa,IAC9BP,GAAG,CAACQ,MAAM,CAACL,QAAQ,CAACI,aAAa,CACrC,CAAC;UACD,MAAME,YAAW,GAAIT,GAAG,CAACU,KAAI,CAC5BC,WAAW,CAAC,EACZR,QAAQ,CAACL,OAAO,CAACa,WAAW,CAAC,CAAC,CAAC;UAEhC,OAAOV,qBAAoB,IAAKI,iBAAgB,IAAKI,YAAY;QACrE,CAAC,CAAC;QACF,IAAI,CAACf,eAAc,GAAIA,eAAe;MACtC;IACA;EACJ,CAAC;EAEDkB,KAAK,EAAE;IACH;IACApB,aAAa,EAAE,SAAAA,CAAA,EAAW;MACtB,IAAI,CAACI,aAAa,CAAC,CAAC,EAAE;IAC1B;EACJ,CAAC;;EACDiB,OAAOA,CAAA,EAAG;IACR;IACEC,UAAU,CAAC,MAAM;MACb,IAAI,CAACrB,WAAU,GAAI,CACnB;QACAsB,EAAE,EAAE,CAAC;QACLL,KAAK,EAAE,oBAAoB;QAC3BF,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;QACxBJ,UAAU,EAAE,IAAI;QAChBY,YAAY,EAAE,CAAC;QACfC,QAAQ,EAAE;MACV,CAAC,EACD;QACAF,EAAE,EAAE,CAAC;QACLL,KAAK,EAAE,oBAAoB;QAC3BF,MAAM,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,YAAY,CAAC;QACrCJ,UAAU,EAAE,IAAI;QAChBY,YAAY,EAAE,CAAC;QACfC,QAAQ,EAAE;MACV;MACF;MAAA,CACD;MACD;MACA,IAAI,CAACvB,eAAc,GAAI,IAAI,CAACD,WAAW;IACzC,CAAC,EAAE,IAAI,CAAC,EAAE;EACZ;AACA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}